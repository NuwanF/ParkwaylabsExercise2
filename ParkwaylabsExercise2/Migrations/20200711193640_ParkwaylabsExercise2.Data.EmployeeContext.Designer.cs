// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkwaylabsExercise2.Data;

namespace ParkwaylabsExercise2.Migrations
{
    [DbContext(typeof(DevTeamDBContext))]
    [Migration("20200711193640_ParkwaylabsExercise2.Data.EmployeeContext")]
    partial class ParkwaylabsExercise2DataEmployeeContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkwaylabsExercise2.Models.Developer", b =>
                {
                    b.Property<int>("DeveloperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("DeveloperId");

                    b.ToTable("Developer");
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.Developer_TechLead", b =>
                {
                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("TechLeadId")
                        .HasColumnType("int");

                    b.HasKey("DeveloperId", "TechLeadId");

                    b.HasIndex("TechLeadId");

                    b.ToTable("Developer_TechLead");
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.Developer_Technology", b =>
                {
                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.Property<int>("ExpLevel")
                        .HasColumnType("int");

                    b.HasKey("DeveloperId", "TechnologyId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("Developer_Technology");
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.TechLead", b =>
                {
                    b.Property<int>("TechLeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("TechLeadId");

                    b.ToTable("TechLead");
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.TechLead_Technology", b =>
                {
                    b.Property<int>("TechLeadId")
                        .HasColumnType("int");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.Property<int>("ExpLevel")
                        .HasColumnType("int");

                    b.HasKey("TechLeadId", "TechnologyId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("TechLead_Technology");
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("TechnologyId");

                    b.ToTable("Technology");
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.Developer_TechLead", b =>
                {
                    b.HasOne("ParkwaylabsExercise2.Models.Developer", "Developer")
                        .WithMany("Developer_TechLeads")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkwaylabsExercise2.Models.TechLead", "TechLead")
                        .WithMany("Developer_TechLeads")
                        .HasForeignKey("TechLeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.Developer_Technology", b =>
                {
                    b.HasOne("ParkwaylabsExercise2.Models.Developer", "Developer")
                        .WithMany("Developer_Technologies")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkwaylabsExercise2.Models.Technology", "Technology")
                        .WithMany("Developer_Technologies")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.TechLead_Technology", b =>
                {
                    b.HasOne("ParkwaylabsExercise2.Models.TechLead", "TechLead")
                        .WithMany("TechLead_Technologies")
                        .HasForeignKey("TechLeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkwaylabsExercise2.Models.Technology", "Technology")
                        .WithMany("TechLead_Technologies")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
