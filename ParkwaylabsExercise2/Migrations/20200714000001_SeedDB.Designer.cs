// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkwaylabsExercise2.Data;

namespace ParkwaylabsExercise2.Migrations
{
    [DbContext(typeof(DevTeamDBContext))]
    [Migration("20200714000001_SeedDB")]
    partial class SeedDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkwaylabsExercise2.Models.Developer", b =>
                {
                    b.Property<int>("DeveloperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("DeveloperId");

                    b.ToTable("Developer");

                    b.HasData(
                        new
                        {
                            DeveloperId = 1,
                            Name = "Saman"
                        },
                        new
                        {
                            DeveloperId = 2,
                            Name = "Ruwan"
                        },
                        new
                        {
                            DeveloperId = 3,
                            Name = "Jehan"
                        },
                        new
                        {
                            DeveloperId = 4,
                            Name = "Achini"
                        },
                        new
                        {
                            DeveloperId = 5,
                            Name = "Suwan"
                        },
                        new
                        {
                            DeveloperId = 6,
                            Name = "Ajith"
                        });
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.DeveloperTechLead", b =>
                {
                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("TechLeadId")
                        .HasColumnType("int");

                    b.HasKey("DeveloperId", "TechLeadId");

                    b.HasIndex("TechLeadId");

                    b.ToTable("DeveloperTechLead");

                    b.HasData(
                        new
                        {
                            DeveloperId = 1,
                            TechLeadId = 1
                        },
                        new
                        {
                            DeveloperId = 4,
                            TechLeadId = 2
                        },
                        new
                        {
                            DeveloperId = 5,
                            TechLeadId = 1
                        },
                        new
                        {
                            DeveloperId = 2,
                            TechLeadId = 2
                        },
                        new
                        {
                            DeveloperId = 6,
                            TechLeadId = 2
                        },
                        new
                        {
                            DeveloperId = 3,
                            TechLeadId = 3
                        },
                        new
                        {
                            DeveloperId = 4,
                            TechLeadId = 3
                        });
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.DeveloperTechnology", b =>
                {
                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.Property<int>("ExpLevel")
                        .HasColumnType("int");

                    b.HasKey("DeveloperId", "TechnologyId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("DeveloperTechnology");

                    b.HasData(
                        new
                        {
                            DeveloperId = 1,
                            TechnologyId = 1,
                            ExpLevel = 4
                        },
                        new
                        {
                            DeveloperId = 1,
                            TechnologyId = 2,
                            ExpLevel = 5
                        },
                        new
                        {
                            DeveloperId = 1,
                            TechnologyId = 3,
                            ExpLevel = 6
                        },
                        new
                        {
                            DeveloperId = 2,
                            TechnologyId = 3,
                            ExpLevel = 4
                        },
                        new
                        {
                            DeveloperId = 2,
                            TechnologyId = 2,
                            ExpLevel = 5
                        },
                        new
                        {
                            DeveloperId = 3,
                            TechnologyId = 2,
                            ExpLevel = 6
                        },
                        new
                        {
                            DeveloperId = 4,
                            TechnologyId = 2,
                            ExpLevel = 6
                        },
                        new
                        {
                            DeveloperId = 5,
                            TechnologyId = 2,
                            ExpLevel = 4
                        },
                        new
                        {
                            DeveloperId = 6,
                            TechnologyId = 2,
                            ExpLevel = 5
                        });
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.TechLead", b =>
                {
                    b.Property<int>("TechLeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("TechLeadId");

                    b.ToTable("TechLead");

                    b.HasData(
                        new
                        {
                            TechLeadId = 1,
                            Name = "Aruna"
                        },
                        new
                        {
                            TechLeadId = 2,
                            Name = "Hasith"
                        },
                        new
                        {
                            TechLeadId = 3,
                            Name = "Amal"
                        });
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.TechLeadTechnology", b =>
                {
                    b.Property<int>("TechLeadId")
                        .HasColumnType("int");

                    b.Property<int>("TechnologyId")
                        .HasColumnType("int");

                    b.Property<int>("ExpLevel")
                        .HasColumnType("int");

                    b.HasKey("TechLeadId", "TechnologyId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("TechLeadTechnology");

                    b.HasData(
                        new
                        {
                            TechLeadId = 1,
                            TechnologyId = 1,
                            ExpLevel = 4
                        },
                        new
                        {
                            TechLeadId = 2,
                            TechnologyId = 1,
                            ExpLevel = 5
                        },
                        new
                        {
                            TechLeadId = 2,
                            TechnologyId = 2,
                            ExpLevel = 6
                        },
                        new
                        {
                            TechLeadId = 3,
                            TechnologyId = 1,
                            ExpLevel = 4
                        },
                        new
                        {
                            TechLeadId = 2,
                            TechnologyId = 3,
                            ExpLevel = 5
                        },
                        new
                        {
                            TechLeadId = 3,
                            TechnologyId = 3,
                            ExpLevel = 6
                        });
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("TechnologyId");

                    b.ToTable("Technology");

                    b.HasData(
                        new
                        {
                            TechnologyId = 1,
                            Name = "C#"
                        },
                        new
                        {
                            TechnologyId = 2,
                            Name = "React"
                        },
                        new
                        {
                            TechnologyId = 3,
                            Name = "JQuery"
                        });
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.DeveloperTechLead", b =>
                {
                    b.HasOne("ParkwaylabsExercise2.Models.Developer", "Developer")
                        .WithMany("DeveloperTechLeads")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkwaylabsExercise2.Models.TechLead", "TechLead")
                        .WithMany("DeveloperTechLeads")
                        .HasForeignKey("TechLeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.DeveloperTechnology", b =>
                {
                    b.HasOne("ParkwaylabsExercise2.Models.Developer", "Developer")
                        .WithMany("DeveloperTechnologies")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkwaylabsExercise2.Models.Technology", "Technology")
                        .WithMany("DeveloperTechnologies")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParkwaylabsExercise2.Models.TechLeadTechnology", b =>
                {
                    b.HasOne("ParkwaylabsExercise2.Models.TechLead", "TechLead")
                        .WithMany("TechLeadTechnologies")
                        .HasForeignKey("TechLeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkwaylabsExercise2.Models.Technology", "Technology")
                        .WithMany("TechLeadTechnologies")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
